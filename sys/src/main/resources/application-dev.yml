spring:
  rabbitmq:
    host: 192.168.52.10
    port: 5672
    username: root
    password: root
    #虚拟host 可以不设置,使用server默认host
    virtual-host: /yifan
    #开启 confirm 确认机制
    publisher-confirm-type: correlated
    #开启 return 确认机制
    publisher-returns: true
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://192.168.52.10:3306/ball_sys?useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT&useSSL=false&allowPublicKeyRetrieval=true
    # url: jdbc:mysql://192.168.52.10:3306/ball_sys?useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT&useSSL=false
    username: root
    password: Yifan123.
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      #初始化大小
      initialSize: 5
      #最小值
      minIdle: 5
      #最大值
      maxActive: 20
      #最大等待时间，配置获取连接等待超时，时间单位都是毫秒ms
      maxWait: 60000
      #配置间隔多久才进行一次检测，检测需要关闭的空闲连接
      timeBetweenEvictionRunsMillis: 60000
      #配置一个连接在池中最小生存的时间
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: true
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，
      #'wall'用于防火墙，SpringBoot中没有log4j，我改成了log4j2
      filters: stat,wall,log4j2
      #最大PSCache连接
      maxPoolPreparedStatementPerConnectionSize: 20
      useGlobalDataSourceStat: true
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
      # 配置StatFilter
      web-stat-filter:
        #默认为false，设置为true启动
        enabled: true
        url-pattern: "/*"
        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
      #配置StatViewServlet
      stat-view-servlet:
        url-pattern: "/druid/*"
        #允许那些ip
        allow: 127.0.0.1
        login-username: admin
        login-password: 123456
        #禁止那些ip
        deny: 192.168.1.102
        #是否可以重置
        reset-enable: true
        #启用
        enabled: true
  redis:
    database: 4
    host: 192.168.52.10
    port: 6379
    password: Yifan123.
    jedis:
      pool:
        max-wait: 3600
        max-active: 1
        max-idle: 1
        min-idle: 1
    timeout: 3600
#Mybatis配置
mybatis-plus:
  # 搜索指定包别名
  type-aliases-package: com.chain
  # 配置mapper的扫描，找到所有的mapper.xml映射文件
  mapper-locations: classpath*:mapper/*.xml
seata:
  enabled: true
  #使用自动代理数据源
  enableAutoDataSourceProxy: true
  #数据源代理模式使用AT模式(可以不用配置，seata默认使用AT模式)
  data-source-proxy-mode: AT
  # 配置事务分组， 要与客户端配置的事务分组一致
  tx-service-group: 'test_tx_group'
  #事务群组（可以每个应用独立取名，也可以使用相同的名字），要与服务端seataServer.properties中service.vgroup_mapping中存在,并且要保证多个群组情况下后缀名要保持一致-tx_group
  service:
    vgroup-mapping:
      #就是服务端配置中cluster的值，即default
      test_tx_group: 'default'
      grouplist:
        seata-server: 192.168.52.10:8091
  registry:
    type: nacos
    nacos:
      #nacos地址
      server-addr: 192.168.52.10:8848
      # seata分组名称
      group: SEATA_GROUP
      #nacos命名空间ID
      namespace: 5d2b98a6-2bf4-4d89-a2a6-a30fb281c2f5
      #seata服务名
      application: seata-server
      cluster: 'default'
  config:
    type: nacos
    nacos:
      #nacos地址
      server-addr: 192.168.52.10:8848
      # seata分组名称
      group: SEATA_GROUP
      #nacos命名空间ID
      namespace: 5d2b98a6-2bf4-4d89-a2a6-a30fb281c2f5
      #读nacos上的seataServer.properties配置文件
      data-id: seataServer.properties